{"ast":null,"code":"import _regeneratorRuntime from \"/Users/swaganta/Documents/blockchain_projects/betting_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/swaganta/Documents/blockchain_projects/betting_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/swaganta/Documents/blockchain_projects/betting_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/swaganta/Documents/blockchain_projects/betting_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/swaganta/Documents/blockchain_projects/betting_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/swaganta/Documents/blockchain_projects/betting_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/swaganta/Documents/blockchain_projects/betting_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/swaganta/Documents/blockchain_projects/betting_game/src/App.js\";\nimport React, { Component } from 'react';\nimport Loading from './Loading';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport './App.css';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      account: null,\n      amount: null,\n      balance: null,\n      contract: null,\n      event: null,\n      loading: false,\n      network: null,\n      maxBet: 0,\n      minBet: 0,\n      web3: null,\n      wrongNetwork: false,\n      contractAddress: null\n    };\n    _this.makeBet = _this.makeBet.bind(_assertThisInitialized(_this));\n    _this.setState = _this.setState.bind(_assertThisInitialized(_this));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n    /** !UPDATE **/\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var accounts, network, balance, web3, maxBet, minBet, contract, contract_abi, contract_address;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(typeof window.ethereum !== 'undefined' && !this.state.wrongNetwork)) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                //don't refresh DApp when user change the network\n                window.ethereum.autoRefreshOnNetworkChange = false;\n                web3 = new Web3(window.ethereum);\n                this.setState({\n                  web3: web3\n                });\n                contract_abi = [{\n                  \"anonymous\": false,\n                  \"inputs\": [{\n                    \"indexed\": true,\n                    \"internalType\": \"address\",\n                    \"name\": \"sender\",\n                    \"type\": \"address\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"Received\",\n                  \"type\": \"event\"\n                }, {\n                  \"anonymous\": false,\n                  \"inputs\": [{\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"id\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"bet\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"randomSeed\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"player\",\n                    \"type\": \"address\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"winAmount\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"randomResult\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"time\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"Result\",\n                  \"type\": \"event\"\n                }, {\n                  \"anonymous\": false,\n                  \"inputs\": [{\n                    \"indexed\": false,\n                    \"internalType\": \"address\",\n                    \"name\": \"admin\",\n                    \"type\": \"address\"\n                  }, {\n                    \"indexed\": false,\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"Withdraw\",\n                  \"type\": \"event\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"bet\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"seed\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"game\",\n                  \"outputs\": [{\n                    \"internalType\": \"bool\",\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                  }],\n                  \"stateMutability\": \"payable\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"requestId\",\n                    \"type\": \"bytes32\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"randomness\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"rawFulfillRandomness\",\n                  \"outputs\": [],\n                  \"stateMutability\": \"nonpayable\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"_keyHash\",\n                    \"type\": \"bytes32\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_fee\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"_seed\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"requestRandomness\",\n                  \"outputs\": [{\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"requestId\",\n                    \"type\": \"bytes32\"\n                  }],\n                  \"stateMutability\": \"nonpayable\",\n                  \"type\": \"function\"\n                }, {\n                  \"stateMutability\": \"payable\",\n                  \"type\": \"receive\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"random\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"verdict\",\n                  \"outputs\": [],\n                  \"stateMutability\": \"payable\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"withdrawEther\",\n                  \"outputs\": [],\n                  \"stateMutability\": \"payable\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"withdrawLink\",\n                  \"outputs\": [],\n                  \"stateMutability\": \"nonpayable\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"stateMutability\": \"nonpayable\",\n                  \"type\": \"constructor\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"admin\",\n                  \"outputs\": [{\n                    \"internalType\": \"address payable\",\n                    \"name\": \"\",\n                    \"type\": \"address\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"ethInUsd\",\n                  \"outputs\": [{\n                    \"internalType\": \"int256\",\n                    \"name\": \"\",\n                    \"type\": \"int256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"gameId\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"name\": \"games\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"id\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"bet\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"seed\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"internalType\": \"uint256\",\n                    \"name\": \"amount\",\n                    \"type\": \"uint256\"\n                  }, {\n                    \"internalType\": \"address payable\",\n                    \"name\": \"player\",\n                    \"type\": \"address\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"lastGameId\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [{\n                    \"internalType\": \"bytes32\",\n                    \"name\": \"\",\n                    \"type\": \"bytes32\"\n                  }],\n                  \"name\": \"nonces\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"randomResult\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }, {\n                  \"inputs\": [],\n                  \"name\": \"weiInUsd\",\n                  \"outputs\": [{\n                    \"internalType\": \"uint256\",\n                    \"name\": \"\",\n                    \"type\": \"uint256\"\n                  }],\n                  \"stateMutability\": \"view\",\n                  \"type\": \"function\"\n                }];\n                contract_address = '0x2FeF79F6b8777D4C13E2D7be422628A5B458b7ad'; //rinkeby\n\n                contract = new web3.eth.Contract(contract_abi, contract_address);\n                _context4.next = 9;\n                return web3.eth.getAccounts();\n\n              case 9:\n                accounts = _context4.sent;\n\n                if (!(typeof accounts[0] !== 'undefined' && accounts[0] !== null)) {\n                  _context4.next = 21;\n                  break;\n                }\n\n                _context4.next = 13;\n                return web3.eth.getBalance(accounts[0]);\n\n              case 13:\n                balance = _context4.sent;\n                _context4.next = 16;\n                return web3.eth.getBalance(contract_address);\n\n              case 16:\n                maxBet = _context4.sent;\n                _context4.next = 19;\n                return contract.methods.weiInUsd().call();\n\n              case 19:\n                minBet = _context4.sent;\n                this.setState({\n                  account: accounts[0],\n                  balance: balance,\n                  minBet: minBet,\n                  maxBet: maxBet\n                });\n\n              case 21:\n                this.setState({\n                  contract: contract,\n                  contractAddress: contract_address\n                }); //Update account&balance when user change the account\n\n                window.ethereum.on('accountsChanged', /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(accounts) {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!(typeof accounts[0] !== 'undefined' && accounts[0] !== null)) {\n                              _context2.next = 13;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return web3.eth.getBalance(accounts[0]);\n\n                          case 3:\n                            balance = _context2.sent;\n                            _context2.next = 6;\n                            return web3.eth.getBalance(contract_address);\n\n                          case 6:\n                            maxBet = _context2.sent;\n                            _context2.next = 9;\n                            return contract.methods.weiInUsd().call();\n\n                          case 9:\n                            minBet = _context2.sent;\n\n                            _this2.setState({\n                              account: accounts[0],\n                              balance: balance,\n                              minBet: minBet,\n                              maxBet: maxBet\n                            });\n\n                            _context2.next = 14;\n                            break;\n\n                          case 13:\n                            _this2.setState({\n                              account: null,\n                              balance: 0\n                            });\n\n                          case 14:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()); //Update data when user switch the network\n\n                window.ethereum.on('chainChanged', /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(chainId) {\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            network = parseInt(chainId, 16);\n\n                            if (!(network !== 4)) {\n                              _context3.next = 5;\n                              break;\n                            }\n\n                            _this2.setState({\n                              wrongNetwork: true\n                            });\n\n                            _context3.next = 17;\n                            break;\n\n                          case 5:\n                            if (!_this2.state.account) {\n                              _context3.next = 16;\n                              break;\n                            }\n\n                            _context3.next = 8;\n                            return _this2.state.web3.eth.getBalance(_this2.state.account);\n\n                          case 8:\n                            balance = _context3.sent;\n                            _context3.next = 11;\n                            return _this2.state.web3.eth.getBalance(_this2.state.contractAddress);\n\n                          case 11:\n                            maxBet = _context3.sent;\n                            _context3.next = 14;\n                            return _this2.state.contract.methods.weiInUsd().call();\n\n                          case 14:\n                            minBet = _context3.sent;\n\n                            _this2.setState({\n                              balance: balance,\n                              maxBet: maxBet,\n                              minBet: minBet\n                            });\n\n                          case 16:\n                            _this2.setState({\n                              network: network,\n                              loading: false,\n                              onlyNetwork: false,\n                              wrongNetwork: false\n                            });\n\n                          case 17:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 24:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"makeBet\",\n    value: function () {\n      var _makeBet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(bet, amount) {\n        var _this3 = this;\n\n        var networkId, randomSeed;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.state.web3.eth.net.getId();\n\n              case 2:\n                networkId = _context6.sent;\n\n                if (networkId !== 4) {\n                  this.setState({\n                    wrongNetwork: true\n                  });\n                } else if (typeof this.state.account !== 'undefined' && this.state.account !== null) {\n                  randomSeed = Math.floor(Math.random() * Math.floor(1e9)); //Send bet to the contract and wait for the verdict\n\n                  this.state.contract.methods.game(bet, randomSeed).send({\n                    from: this.state.account,\n                    value: amount\n                  }).on('transactionHash', function (hash) {\n                    _this3.setState({\n                      loading: true\n                    });\n\n                    _this3.state.contract.events.Result({}, /*#__PURE__*/function () {\n                      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(error, event) {\n                        var verdict, balance, maxBet;\n                        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                          while (1) {\n                            switch (_context5.prev = _context5.next) {\n                              case 0:\n                                verdict = event.returnValues.winAmount;\n\n                                if (verdict === '0') {\n                                  window.alert('lose :(');\n                                } else {\n                                  window.alert('WIN!');\n                                } //Prevent error when user logout, while waiting for the verdict\n\n\n                                if (!(_this3.state.account !== null && typeof _this3.state.account !== 'undefined')) {\n                                  _context5.next = 10;\n                                  break;\n                                }\n\n                                _context5.next = 5;\n                                return _this3.state.web3.eth.getBalance(_this3.state.account);\n\n                              case 5:\n                                balance = _context5.sent;\n                                _context5.next = 8;\n                                return _this3.state.web3.eth.getBalance(_this3.state.contractAddress);\n\n                              case 8:\n                                maxBet = _context5.sent;\n\n                                _this3.setState({\n                                  balance: balance,\n                                  maxBet: maxBet\n                                });\n\n                              case 10:\n                                _this3.setState({\n                                  loading: false\n                                });\n\n                              case 11:\n                              case \"end\":\n                                return _context5.stop();\n                            }\n                          }\n                        }, _callee5);\n                      }));\n\n                      return function (_x5, _x6) {\n                        return _ref3.apply(this, arguments);\n                      };\n                    }());\n                  }).on('error', function (error) {\n                    window.alert('Error');\n                  });\n                } else {\n                  window.alert('Problem with account or network');\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function makeBet(_x3, _x4) {\n        return _makeBet.apply(this, arguments);\n      }\n\n      return makeBet;\n    }()\n  }, {\n    key: \"onChange\",\n    value: function onChange(value) {\n      this.setState({\n        'amount': value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }), \"\\xA0\", this.state.wrongNetwork ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5 text-monospace text-center mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, \"Please Enter Rinkeby Network\"))) : this.state.loading ? /*#__PURE__*/React.createElement(Loading, {\n        balance: this.state.balance,\n        maxBet: this.state.maxBet,\n        minBet: this.state.minBet,\n        web3: this.state.web3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(Main, {\n        amount: this.state.amount,\n        balance: this.state.balance,\n        makeBet: this.makeBet,\n        onChange: this.onChange,\n        maxBet: this.state.maxBet,\n        minBet: this.state.minBet,\n        loading: this.state.loading,\n        web3: this.state.web3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/swaganta/Documents/blockchain_projects/betting_game/src/App.js"],"names":["React","Component","Loading","Navbar","Main","Web3","App","props","state","account","amount","balance","contract","event","loading","network","maxBet","minBet","web3","wrongNetwork","contractAddress","makeBet","bind","setState","onChange","loadWeb3","window","ethereum","autoRefreshOnNetworkChange","contract_abi","contract_address","eth","Contract","getAccounts","accounts","getBalance","methods","weiInUsd","call","on","chainId","parseInt","onlyNetwork","bet","net","getId","networkId","randomSeed","Math","floor","random","game","send","from","value","hash","events","Result","error","verdict","returnValues","winAmount","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loading from './Loading'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport Web3 from 'web3'\nimport './App.css';\n\nclass App extends Component {\n  \n  async componentWillMount() {\n    await this.loadWeb3()\n  }\n\n  /** !UPDATE **/\n  async loadWeb3() {\n    if(typeof window.ethereum!=='undefined' && !this.state.wrongNetwork){\n      let accounts, network, balance, web3, maxBet, minBet, contract, contract_abi, contract_address\n\n      //don't refresh DApp when user change the network\n      window.ethereum.autoRefreshOnNetworkChange = false;\n\n      web3 = new Web3(window.ethereum)\n      this.setState({web3: web3})\n\n      contract_abi = [{\"anonymous\": false,\"inputs\": [{\"indexed\": true,\"internalType\": \"address\",\"name\": \"sender\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"Received\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"id\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"randomSeed\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"address\",\"name\": \"player\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"winAmount\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"randomResult\",\"type\": \"uint256\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"time\",\"type\": \"uint256\"}],\"name\": \"Result\",\"type\": \"event\"},{\"anonymous\": false,\"inputs\": [{\"indexed\": false,\"internalType\": \"address\",\"name\": \"admin\",\"type\": \"address\"},{\"indexed\": false,\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"Withdraw\",\"type\": \"event\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"seed\",\"type\": \"uint256\"}],\"name\": \"game\",\"outputs\": [{\"internalType\": \"bool\",\"name\": \"\",\"type\": \"bool\"}],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"requestId\",\"type\": \"bytes32\"},{\"internalType\": \"uint256\",\"name\": \"randomness\",\"type\": \"uint256\"}],\"name\": \"rawFulfillRandomness\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"_keyHash\",\"type\": \"bytes32\"},{\"internalType\": \"uint256\",\"name\": \"_fee\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"_seed\",\"type\": \"uint256\"}],\"name\": \"requestRandomness\",\"outputs\": [{\"internalType\": \"bytes32\",\"name\": \"requestId\",\"type\": \"bytes32\"}],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"stateMutability\": \"payable\",\"type\": \"receive\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"random\",\"type\": \"uint256\"}],\"name\": \"verdict\",\"outputs\": [],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"withdrawEther\",\"outputs\": [],\"stateMutability\": \"payable\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"}],\"name\": \"withdrawLink\",\"outputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"function\"},{\"inputs\": [],\"stateMutability\": \"nonpayable\",\"type\": \"constructor\"},{\"inputs\": [],\"name\": \"admin\",\"outputs\": [{\"internalType\": \"address payable\",\"name\": \"\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"ethInUsd\",\"outputs\": [{\"internalType\": \"int256\",\"name\": \"\",\"type\": \"int256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"gameId\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"name\": \"games\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"id\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"bet\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"seed\",\"type\": \"uint256\"},{\"internalType\": \"uint256\",\"name\": \"amount\",\"type\": \"uint256\"},{\"internalType\": \"address payable\",\"name\": \"player\",\"type\": \"address\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"lastGameId\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [{\"internalType\": \"bytes32\",\"name\": \"\",\"type\": \"bytes32\"}],\"name\": \"nonces\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"randomResult\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"},{\"inputs\": [],\"name\": \"weiInUsd\",\"outputs\": [{\"internalType\": \"uint256\",\"name\": \"\",\"type\": \"uint256\"}],\"stateMutability\": \"view\",\"type\": \"function\"}]\n      contract_address = '0x2FeF79F6b8777D4C13E2D7be422628A5B458b7ad' //rinkeby\n      contract = new web3.eth.Contract(contract_abi, contract_address);\n      accounts = await web3.eth.getAccounts()\n      \n      //Update the data when user initially connect\n      if(typeof accounts[0]!=='undefined' && accounts[0]!==null) {\n        balance = await web3.eth.getBalance(accounts[0])\n        maxBet = await web3.eth.getBalance(contract_address)\n        minBet = await contract.methods.weiInUsd().call()\n        this.setState({account: accounts[0], balance: balance, minBet: minBet, maxBet: maxBet})\n      }\n\n      this.setState({\n        contract: contract,\n        contractAddress: contract_address\n      })\n\n      //Update account&balance when user change the account\n      window.ethereum.on('accountsChanged', async (accounts) => {\n        if(typeof accounts[0] !== 'undefined'  && accounts[0]!==null){\n          balance = await web3.eth.getBalance(accounts[0])\n          maxBet = await web3.eth.getBalance(contract_address)\n          minBet = await contract.methods.weiInUsd().call()\n          \n          this.setState({account: accounts[0], balance: balance, minBet: minBet, maxBet: maxBet})\n        } else {\n          this.setState({account: null, balance: 0})\n        }\n      });\n\n      //Update data when user switch the network\n      window.ethereum.on('chainChanged', async (chainId) => {\n        network = parseInt(chainId, 16)\n        if(network!==4){\n          this.setState({wrongNetwork: true})\n        } else {\n          if(this.state.account){\n            balance = await this.state.web3.eth.getBalance(this.state.account)\n            maxBet = await this.state.web3.eth.getBalance(this.state.contractAddress)\n            minBet = await this.state.contract.methods.weiInUsd().call()\n            \n            this.setState({ balance: balance, maxBet: maxBet, minBet: minBet })\n          }\n          this.setState({ network: network, loading: false, onlyNetwork: false, wrongNetwork: false})\n        }\n      });\n    }\n  }\n\n  async makeBet(bet, amount) {\n    //randomSeed - one of the components from which will be generated final random value\n    const networkId = await this.state.web3.eth.net.getId() \n    if(networkId!==4) {\n      this.setState({wrongNetwork: true})\n    } else if(typeof this.state.account !=='undefined' && this.state.account !==null){\n      var randomSeed = Math.floor(Math.random() * Math.floor(1e9))\n\n      //Send bet to the contract and wait for the verdict\n      this.state.contract.methods.game(bet, randomSeed).send({from: this.state.account, value: amount}).on('transactionHash', (hash) => {\n        this.setState({ loading: true })\n        this.state.contract.events.Result({}, async (error, event) => {\n          const verdict = event.returnValues.winAmount\n          if(verdict === '0') {\n            window.alert('lose :(')\n          } else {\n            window.alert('WIN!')\n          }\n\n          //Prevent error when user logout, while waiting for the verdict\n          if(this.state.account!==null && typeof this.state.account!=='undefined'){\n            const balance = await this.state.web3.eth.getBalance(this.state.account)\n            const maxBet = await this.state.web3.eth.getBalance(this.state.contractAddress)\n            this.setState({ balance: balance, maxBet: maxBet })\n          }\n          this.setState({ loading: false })\n        })\n      }).on('error', (error) => {\n        window.alert('Error')\n      })\n    } else {\n      window.alert('Problem with account or network')\n    }\n  }\n\n  onChange(value) {\n    this.setState({'amount': value});\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: null,\n      amount: null,\n      balance: null,\n      contract: null,\n      event: null,\n      loading: false,\n      network: null,\n      maxBet: 0,\n      minBet: 0,\n      web3: null,\n      wrongNetwork: false,\n      contractAddress: null\n    }\n\n    this.makeBet = this.makeBet.bind(this)\n    this.setState = this.setState.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account}/>&nbsp;\n        {this.state.wrongNetwork\n          ? <div className=\"container-fluid mt-5 text-monospace text-center mr-auto ml-auto\">\n              <div className=\"content mr-auto ml-auto\">\n                <h1>Please Enter Rinkeby Network</h1>\n              </div>\n            </div>\n          : this.state.loading \n              ? <Loading\n                  balance={this.state.balance}\n                  maxBet={this.state.maxBet}\n                  minBet={this.state.minBet}\n                  web3={this.state.web3}\n                />\n              : <Main\n                  amount={this.state.amount}\n                  balance={this.state.balance}\n                  makeBet={this.makeBet}\n                  onChange={this.onChange}\n                  maxBet={this.state.maxBet}\n                  minBet={this.state.minBet}\n                  loading={this.state.loading}\n                  web3={this.state.web3}\n                />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}